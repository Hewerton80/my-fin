// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum PaymantType {
    CREDIT_CARD
    DEBIT_CARD
    CASH
    PIX
}

enum Frequency {
    DO_NOT_REPEAT
    DAILY
    MONTHLY
    YEARLY
}

model User {
    id            String       @id @default(cuid())
    email         String       @unique
    name          String
    password      String
    avatarBgColor String
    createdAt     DateTime     @default(now())
    expenses      Expense[]
    creditCards   CreditCard[]
}

model Expense {
    id                 String              @id @default(cuid())
    name               String
    description        String?
    amount             Float?
    isPaid             Boolean             @default(false)
    dueDate            DateTime?
    registrationDate   DateTime?
    creditCardId       String?
    userId             String
    frequency          Frequency?
    totalInstallments  Int?
    currentInstallment Int?
    user               User                @relation(fields: [userId], references: [id])
    paymentType        PaymantType
    creditCard         CreditCard?         @relation(fields: [creditCardId], references: [id])
    createdAt          DateTime            @default(now())
    transitionHistory  TransitionHistory[]
    Category           Category?           @relation(fields: [categoryId], references: [id])
    categoryId         String?
}

model CreditCard {
    id                String    @id @default(cuid())
    iconName          String?
    name              String
    dueDay            Int
    invoiceClosingDay Int
    createdAt         DateTime  @default(now())
    userId            String
    user              User      @relation(fields: [userId], references: [id])
    expenses          Expense[]
}

model GroupCategory {
    id          String     @id @default(cuid())
    name        String
    description String?
    createdAt   DateTime   @default(now())
    categories  Category[]
}

model Category {
    id              String        @id @default(cuid())
    name            String
    description     String?
    iconName        String?
    groupCategory   GroupCategory @relation(fields: [groupCategoryId], references: [id])
    groupCategoryId String
    createdAt       DateTime      @default(now())
    expenses        Expense[]
}

model TransitionHistory {
    id                 String    @id @default(cuid())
    name               String
    amount             Float?
    totalInstallments  Int?
    currentInstallment Int?
    expenseId          String
    expense            Expense   @relation(fields: [expenseId], references: [id])
    paidAt             DateTime?
    createdAt          DateTime  @default(now())
}
